<project name="JAVANAISE" default="compile">

	<!-- =======================================================
	load the following user properties from a file:
		- build.compiler: Wich compiler do you want use ? (optional)
		- build: Where do you want generate compilate object ?
		- dist: Where do you want to generate the distribution of the project ?
	======================================================== -->
	<property file="build.properties"/>
	

	<!-- ======== PROPERTY DEFINITION ==========================================-->
	<!-- src contains source files	of Javanaise								-->
	<!-- external contains external libraries (jar files) used by Javanaise		-->
	<!-- dist.lib contains the .jar files of the Javanaise distribution			-->
	<!-- dist.jdoc contains the javadoc files of the Javanaise distribution		-->
	<!-- =======================================================================-->
	<property name="src" 			 	value="${basedir}/src"/>
	<property name="external" 			value="${basedir}/external"/>
	<property name="dist.lib" 			value="${dist}/lib"/>   
	<property name="dist.jdoc" 			value="${dist}/jdoc"/> 
	

	<!--====================================-->
	<!--==========     classpath  ==========-->
	<!--====================================-->
  <path id="classpath">
  	<pathelement location="${build}"/>
    <fileset dir="${basedir}">
      <include name="externals/**/*.jar"/>
    </fileset>
  </path>
    	

	<!--====================================-->
	<!--==========     HELP       ==========-->
	<!-- print the usage of this ant file   -->
	<!--====================================-->

	<target name="help">
		<echo message="The available target is the following:"/>
		<echo message="  compile: compiles the product into ${build}"/>
		<echo message="  clean: removes all produced files."/>
		<echo message="  dist: creates a distribution in ${dist.lib}"/>
		<echo message="  genjvn: generates jvn interposition classes"/>
		
		<echo message=""/>
	</target>


	<!--===================================-->
	<!--==========    COMPILE    ==========-->
	<!--===================================-->

	<target name="compile">
		<mkdir dir="${build}"/>
		<javac srcdir="${src}" destdir="${build}" debug="on">
			<classpath refid="classpath"/>
			<include name="**/*.java"/>
		</javac>
		<rmic classname="jvn.JvnServerImpl" base="${build}"/>
		<rmic classname="jvn.JvnCoordImpl" base="${build}"/>
		<copy toDir="${build}" preservelastmodified="yes">
			<fileset dir="${src}">
				<include name="**/*.vm"/>
			</fileset>
		</copy>
	</target>

	<!--===================================-->
	<!--==========    DIST    ==========-->
	<!--===================================-->
	<target name="dist" depends="compile">
	  <mkdir dir="${dist}"/>
   	  <mkdir dir="${dist.lib}"/>
      <jar destfile="${dist.lib}/javanaise.jar" >
        <fileset dir="${build}" />
      </jar>
      <copy todir="${dist.lib}" >
        <fileset dir="${external}">
          <include name="**/*.jar"/>
        </fileset>
      </copy> 
	</target>
	
	
	<!-- ===================================--> 
	<!-- ==========    GenJvn    ==========--> 
	<!-- ===================================--> 
	<target name="genjvn" depends="compile">
	<java classname="compilator.GenJvn">
	  <arg value="${genjvnparam}" /> 
	  <classpath refid="classpath" /> 
	</java>
	</target>

	<!--===================================-->
	<!--==========     CLEAN     ==========-->
	<!--===================================-->
	<!-- remove all directories -->
	<target name="clean">
		<delete dir="${build}"/>
		<delete dir="${dist}"/>
	</target>
	

</project>
